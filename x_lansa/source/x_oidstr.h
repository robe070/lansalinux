/* ================================================================= */
/* =========== LANSA FOR WINDOWS GLOBAL DEFINITIONS ================ */
/* ================================================================= */
/*                                                                   */
/* Source File         : X_OIDSTR.H                                  */
/* OS/Dependencies     : No                                          */
/* End User Modifiable : Not Recommended                             */
/* Description         : L4W Object Identification Interface         */
/*                                                                   */
/* Amendment History   :                                             */
/*                                                                   */
/* Task Id  Date    Description                                      */
/* =======  ====    ===========                                      */
/*  nnnnn  YY/MM/DD                                                  */
/*                                                                   */
/* ================================================================= */

#ifndef X_OIDSTR_H
#define X_OIDSTR_H

#define X_SOURCELINE_LEN   4096

/* N.B. Options must ONLY be added to the END otherwise existing     */
/* Objects will no longer function correctly.                        */
/* This was an emuneration, but WATCOM used a byte to represent it   */
/* and MS VC used an int.  Thus a call from a Watcom object to load  */
/* an MSVC object had a different image for the data structure.      */
/* The Watcom compiler option /ei was not used as other data         */
/* structures in LANSA/X may have been compromised.                  */
/* X_OBJ_ID_MAX_OPTIONS needs to be incremented.                     */
#define   X_OBJ_ID_OBJECT_TYPE_OPTION     0
#define   X_OBJ_ID_OBJECT_NAME_OPTION     1
#define   X_OBJ_ID_OBJECT_EXT_OPTION      2
#define   X_OBJ_ID_DLL_NAME_OPTION        3
#define   X_OBJ_ID_BUILD_DATE_OPTION      4
#define   X_OBJ_ID_BUILD_TIME_OPTION      5
#define   X_OBJ_ID_SUPPORTS_COMPONENTS_OPTION 6
#define   X_OBJ_ID_COLLECTION_NAME_OPTION 7
#define   X_OBJ_ID_BUILD_NUMBER_OPTION    8
#define   X_OBJ_ID_IS_PC_OTHER_FILE_OPTION 9
#define   X_OBJ_ID_SUPPORTS_ISERIES_FEATURES_OPTION 10

#define   X_OBJ_ID_MAX_OPTIONS           11

typedef struct _X_OBJ_ID_OBJECT_TYPE
{
   X_VCHAR vchText[3];
} X_OBJ_ID_OBJECT_TYPE;

typedef struct _X_OBJ_ID_OBJECT_NAME
{
   X_VCHAR vchText[11];
} X_OBJ_ID_OBJECT_NAME;

typedef struct _X_OBJ_ID_OBJECT_EXT
{
   X_VCHAR vchText[11];
} X_OBJ_ID_OBJECT_EXT;

typedef struct _X_OBJ_ID_DLL_NAME
{
   X_VCHAR vchText[11];
} X_OBJ_ID_DLL_NAME;

typedef struct _X_OBJ_ID_BUILD_DATE
{
   /* __DATE__ */
   /* The compilation date of the current source file. The date is */
   /* a string literal of the form Mmm dd yyyy. The month name Mmm */
   /* is the same as for dates generated by the library function   */
   /* asctime declared in TIME.H.                                  */
   X_VCHAR vchText[12];
} X_OBJ_ID_BUILD_DATE;

typedef struct _X_OBJ_ID_BUILD_TIME
{
   /* __TIME__ */
   /* The most recent compilation time of the current source file. */
   /* The time is a string literal of the form hh:mm:ss.           */
   X_VCHAR vchText[9];
} X_OBJ_ID_BUILD_TIME;

typedef struct _X_OBJ_ID_BUILD_NUMBER
{
   X_LONG   lNumber;             /* Build Number              */
   X_PVCHAR pvchRelease;         /* Release Number            */
   X_PVCHAR pvchDate;            /* Date that Build was built */
                                 /* NOT date of current object*/
   X_PVCHAR pvchCopyright;       /* Copyright Dates           */
} X_OBJ_ID_BUILD_NUMBER;

typedef struct _X_OBJ_ID_SUPPORTS_COMPONENTS
{
   X_BOOL	fSupportsComponents;
} X_OBJ_ID_SUPPORTS_COMPONENTS;

typedef struct _X_OBJ_ID_IS_PC_OTHER_FILE
{
   X_BOOL	fIsPCOtherFile;
} X_OBJ_ID_IS_PC_OTHER_FILE;

typedef struct _X_OBJ_ID_SUPPORTS_ISERIES_FEATURES
{
   X_BOOL	fSupportsIseriesFeatures;
} X_OBJ_ID_SUPPORTS_ISERIES_FEATURES;

typedef struct _X_OBJ_ID_COLLECTION_NAME
{
   X_VCHAR  vchText[9];
} X_OBJ_ID_COLLECTION_NAME;

typedef struct _X_OBJ_ID_TABLE
{
   X_LONG          lOptionIdentifier;
   X_PVOID         pvIdentification;
} X_OBJ_ID_TABLE ;


typedef struct _X_OBJ_ID_STANDARD_IDS
{
   X_PVCHAR  pvchObjType;
   X_PVCHAR  pvchObjName;
   X_PVCHAR  pvchObjExt;
   X_PVCHAR  pvchDLLName;
} X_OBJ_ID_STANDARD_IDS;

typedef struct _X_OBJ_ID_GENERATE 
{
   X_PVCHAR pvchStruct;
   X_PVCHAR pvchOption;
   X_PVCHAR pvchVariable;
   X_PVOID  pvObjectIdentifierValue;
} X_OBJ_ID_GENERATE ;

typedef void (*X_OUTPUT_PFN) ( FILE *, char *);

X_VOID X_Object_Begin_Identifiers( X_OUTPUT_PFN, FILE *, char );
X_VOID X_Object_Set_Standard_Identifiers( X_OBJ_ID_STANDARD_IDS *, char );
X_BOOL X_Object_Set_Identifier( X_LONG , X_PVOID, char );
X_VOID X_Object_End_Identifiers( char );
X_LONG_FUNCTION X_Get_Build_Number( void);

extern X_OBJ_ID_BUILD_NUMBER X_BuildNumber;

#endif  /* #ifndef X_OIDSTR_H */

